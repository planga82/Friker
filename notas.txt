
# To initialize database in the console we put this command
python manage.py migrate  

# To run de server we put
python manage.py runserver

# To create the firs app
python manage.py startapp <appname>
# And now modify settings.py to modify INSTALLED_APPS

# Add to views.py our function thar recieve an httprequesst and return an httpresponse
# Now add it to yrls.py associated with the corresponding url
r'' --> indicate a regular expresion (for the urls or other things)

HttpRequest
	Atributte GET with get parameters
	Atributte POST with post parameters
	Atributte user --> Autenticated user or anonimous user

ORM y django
	Extends fromModel and Field
	__unicode__ --> This is like toString in Java
	OneToOneField, OneToManyField, ManyToManyField, ForeingKey, 
	PrimaryKey --> new Field with the id
	
templates
	To include templates we have to create a folder named templates witch is going to include the templates
	To avoid namespace problems, in the template folder we maust to crate a subfolder with the name of de aplication
	the templates always have access to the object user, we dont have to pass it in the context
	
doing something like this, django only get the 2 elements of the list (lazy instantiation)
	photos = photo.objects.all()
    context = {
        'photos_list':photos[:2]
    }
Is a way to see all sql that django is doing 
# Log all SQL queries in debug  --> see example in settings.py

photo.objects.all().order_by('-created_at')  get the photos order by date creation, descendent


visibility = models.CharField(max_length=3, choices=VISIBILITY)
in this case, visibility could be a tuple or a list of lists

VISIBILITY = (
    (PUBLIC, 'Publica'),
    (PRIVATE, 'Privada')
)

VISIBILITY = [
    [PUBLIC, 'Publica'],
    [PRIVATE, 'Privada']
]
	
